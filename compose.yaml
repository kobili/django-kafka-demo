version: "3"

services:
  postgres:
    image: postgres:14
    ports:
      - 3432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=dev
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./pgData:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dev"]
      interval: 2s
      timeout: 2s
      retries: 0
    networks:
      - django-starter

  kafka:
    image: apache/kafka:3.8.0
    ports:
      - 9092:9092
      - 9093:9093
    volumes:
      - ./kafkaLogs:/tmp/kraft-combined-logs
    environment:
      # TODO: Read up - https://hub.docker.com/r/apache/kafka
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - django-starter

  django:
    depends_on:
      postgres:
        condition: service_healthy
    command: python -Xfrozen_modules=off -m debugpy --listen 0.0.0.0:5678 app/django-app/manage.py runserver 0.0.0.0:8000
    build:
      context: ./
      dockerfile: ./docker/django/Dockerfile
    ports:
      - 8000:8000
      - 5678:5678
    environment:
      - POSTGRES_DB_NAME=dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DEBUG=true
    volumes:
      - ./django-app:/app/django-app
    networks:
      - django-starter

networks:
  django-starter:
    driver: bridge
